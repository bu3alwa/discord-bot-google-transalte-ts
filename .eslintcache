[{"/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Builder.ts":"1","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Command.ts":"2","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Ping.ts":"3","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/commands.ts":"4","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/index.ts":"5","/home/carbon/Repositories/discord-bot-google-translate-ts/src/events/interactionCreate.ts":"6","/home/carbon/Repositories/discord-bot-google-translate-ts/src/events/onReady.ts":"7","/home/carbon/Repositories/discord-bot-google-translate-ts/src/index.ts":"8","/home/carbon/Repositories/discord-bot-google-translate-ts/src/services/prisma.ts":"9","/home/carbon/Repositories/discord-bot-google-translate-ts/src/utils/secrets.ts":"10"},{"size":294,"mtime":1647108517084,"results":"11","hashOfConfig":"12"},{"size":231,"mtime":1647111472542,"results":"13","hashOfConfig":"12"},{"size":384,"mtime":1647108770550,"results":"14","hashOfConfig":"12"},{"size":244,"mtime":1647111395954,"results":"15","hashOfConfig":"12"},{"size":564,"mtime":1647111476690,"results":"16","hashOfConfig":"12"},{"size":512,"mtime":1647109191588,"results":"17","hashOfConfig":"12"},{"size":253,"mtime":1647107933876,"results":"18","hashOfConfig":"12"},{"size":325,"mtime":1647108389842,"results":"19","hashOfConfig":"12"},{"size":220,"mtime":1646256551388,"results":"20","hashOfConfig":"12"},{"size":507,"mtime":1647113396716,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"25"},"1k8v55e",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":10,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":9,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":7,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"61"},"/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Builder.ts",["62","63","64","65","66","67"],[],"import { SlashCommandBuilder } from \"@discordjs/builders\"\nimport { commands } from \"./commands\"\n\n\nlet builder: SlashCommandBuilder[];\n\ncommands.forEach(element => {\n  builder.push(new SlashCommandBuilder().setName(element.command).setDescription(element.description))\n})\n\nexport default builder","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Command.ts",["68"],[],"import { BaseCommandInteraction, ChatInputApplicationCommandData, Client } from 'discord.js'\n\nexport interface Command extends ChatInputApplicationCommandData {\n  run: (client: Client, interaction: BaseCommandInteraction) => void\n}","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/Ping.ts",["69","70","71","72","73","74"],[],"import { BaseCommandInteraction, Client } from \"discord.js\";\nimport { Command } from './Command'\n\nexport const Ping: Command = {\n  name: 'Ping',\n  description: 'Replys with Pong',\n  type: 'CHAT_INPUT',\n  run: async( client: Client, interaction: BaseCommandInteraction) => {\n    const content = 'Pong!'\n    await interaction.followUp({\n      ephemeral: true,\n      content\n    })\n  }\n}","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/commands.ts",["75","76","77","78","79","80","81","82","83","84"],[],"interface Command {\n\tcommand: string,\n\tdescription: string\n}\n\nexport const commands: Command[] = [\n\t{\n\t\tcommand: 'ping',\n\t\tdescription: 'Replies with pong!',\n\t},\n\t{\n\t\tcommand: 'tr',\n\t\tdescription: 'sets translation settings for channel',\n\t},\n]\n","/home/carbon/Repositories/discord-bot-google-translate-ts/src/commands/index.ts",["85","86","87","88","89","90","91","92","93","94","95"],[],"import { REST } from '@discordjs/rest'\nimport { Routes } from 'discord-api-types/v9'\nimport  builder  from './Builder'\nimport { discordToken, clientId, guildId } from '../utils/secrets'\n\n// const com = builder.map(command => command.toJSON());\n\nconst rest = new REST({ version: '9' }).setToken(discordToken);\n\nconst registerCommands = async () => {\n\trest.put(Routes.applicationGuildCommands(clientId, guildId), { body: builder })\n\t\t.then(() => console.log('Successfully registered application commands.'))\n\t\t.catch(console.error);\n}\nexport default registerCommands","/home/carbon/Repositories/discord-bot-google-translate-ts/src/events/interactionCreate.ts",["96","97","98","99","100","101","102","103","104","105","106","107"],[],"import type { BaseCommandInteraction, Client, Interaction } from 'discord.js'\nimport { commands } from '../commands/commands'\n\nconst interactionCreate = (client: Client) => {\n\tclient.on('interactionCreate', async (interaction: Interaction) => {\n\t\tif (interaction.isCommand() || interaction.isContextMenu()) {\n\t\t\tawait handleSlashCommand(client, interaction)\n\t\t}\n\t})\n}\n\nconst handleSlashCommand = async(client: Client, interaction: BaseCommandInteraction): Promise<void> => {\n\n}\n\nexport default interactionCreate\n","/home/carbon/Repositories/discord-bot-google-translate-ts/src/events/onReady.ts",["108","109","110","111","112","113"],[],"import type { Client } from 'discord.js'\n\nconst onReady = (client: Client): void => {\n\tclient.on(\"ready\", async() => {\n\t\tif(!client.user || !client.application) return\n\n\tconsole.log(`Ready! Logged in as ${client.user.tag}`);\n\t})\n}\nexport default onReady","/home/carbon/Repositories/discord-bot-google-translate-ts/src/index.ts",["114","115","116","117"],[],"import { Client, Intents } from 'discord.js'\nimport onReady from './events/onReady'\nimport registerCommands from './commands'\nimport interactionCreate from './events/interactionCreate'\n\nconst client = new Client({intents: [Intents.FLAGS.GUILDS]})\n\nregisterCommands()\n\nonReady(client)\ninteractionCreate(client)\n\nclient.login()","/home/carbon/Repositories/discord-bot-google-translate-ts/src/services/prisma.ts",["118","119","120","121","122"],[],"import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\n\nexport const prisma =\n  global.prisma ||\n  new PrismaClient({\n    log: ['query'],\n  });\n\nglobal.prisma = prisma;","/home/carbon/Repositories/discord-bot-google-translate-ts/src/utils/secrets.ts",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],[],"import * as dotenv from \"dotenv\";\n\ndotenv.config();\n\nexport const discordToken: string = process.env.DISCORD_TOKEN ?? \"\";\nexport const clientId: string = process.env.CLIENT_ID ?? \"\";\nexport const guildId: string = process.env.GUILD_ID ?? \"\";\n\nif (discordToken === \"\") {\n  console.log(\"Missing env: DISCORD_TOKEN\");\n  process.exit(1);\n}\n\nif (clientId === \"\") {\n  console.log(\"Missing env: ClLIENT_ID\");\n  process.exit(1);\n}\n\nif (guildId === \"\") {\n  console.log(\"Missing env: GUILD_ID\");\n  process.exit(1);\n}\n",{"ruleId":"140","severity":2,"message":"141","line":1,"column":1,"nodeType":"142","endLine":1,"endColumn":58,"fix":"143"},{"ruleId":"144","severity":2,"message":"145","line":1,"column":37,"nodeType":null,"messageId":"146","endLine":1,"endColumn":58,"fix":"147"},{"ruleId":"144","severity":2,"message":"148","line":2,"column":26,"nodeType":null,"messageId":"146","endLine":3,"endColumn":1,"fix":"149"},{"ruleId":"144","severity":2,"message":"150","line":5,"column":35,"nodeType":null,"messageId":"151","endLine":5,"endColumn":36,"fix":"152"},{"ruleId":"144","severity":2,"message":"153","line":7,"column":18,"nodeType":null,"messageId":"146","endLine":7,"endColumn":25,"fix":"154"},{"ruleId":"144","severity":2,"message":"155","line":11,"column":23,"nodeType":null,"messageId":"156","endLine":11,"endColumn":23,"fix":"157"},{"ruleId":"144","severity":2,"message":"155","line":5,"column":2,"nodeType":null,"messageId":"156","endLine":5,"endColumn":2,"fix":"158"},{"ruleId":"140","severity":2,"message":"141","line":1,"column":1,"nodeType":"142","endLine":1,"endColumn":61,"fix":"159"},{"ruleId":"144","severity":2,"message":"160","line":1,"column":48,"nodeType":null,"messageId":"146","endLine":1,"endColumn":61,"fix":"161"},{"ruleId":"144","severity":2,"message":"162","line":8,"column":13,"nodeType":null,"messageId":"146","endLine":8,"endColumn":15,"fix":"163"},{"ruleId":"144","severity":2,"message":"164","line":12,"column":14,"nodeType":null,"messageId":"156","endLine":12,"endColumn":14,"fix":"165"},{"ruleId":"144","severity":2,"message":"164","line":14,"column":4,"nodeType":null,"messageId":"156","endLine":14,"endColumn":4,"fix":"166"},{"ruleId":"144","severity":2,"message":"155","line":15,"column":2,"nodeType":null,"messageId":"156","endLine":15,"endColumn":2,"fix":"167"},{"ruleId":"144","severity":2,"message":"168","line":2,"column":1,"nodeType":null,"messageId":"146","endLine":2,"endColumn":18,"fix":"169"},{"ruleId":"144","severity":2,"message":"170","line":3,"column":1,"nodeType":null,"messageId":"146","endLine":3,"endColumn":2,"fix":"171"},{"ruleId":"144","severity":2,"message":"170","line":7,"column":1,"nodeType":null,"messageId":"146","endLine":7,"endColumn":2,"fix":"172"},{"ruleId":"144","severity":2,"message":"173","line":8,"column":1,"nodeType":null,"messageId":"146","endLine":8,"endColumn":3,"fix":"174"},{"ruleId":"144","severity":2,"message":"173","line":9,"column":1,"nodeType":null,"messageId":"146","endLine":9,"endColumn":3,"fix":"175"},{"ruleId":"144","severity":2,"message":"170","line":10,"column":1,"nodeType":null,"messageId":"146","endLine":10,"endColumn":2,"fix":"176"},{"ruleId":"144","severity":2,"message":"170","line":11,"column":1,"nodeType":null,"messageId":"146","endLine":11,"endColumn":2,"fix":"177"},{"ruleId":"144","severity":2,"message":"173","line":12,"column":1,"nodeType":null,"messageId":"146","endLine":12,"endColumn":3,"fix":"178"},{"ruleId":"144","severity":2,"message":"173","line":13,"column":1,"nodeType":null,"messageId":"146","endLine":13,"endColumn":3,"fix":"179"},{"ruleId":"144","severity":2,"message":"170","line":14,"column":1,"nodeType":null,"messageId":"146","endLine":14,"endColumn":2,"fix":"180"},{"ruleId":"140","severity":2,"message":"141","line":2,"column":1,"nodeType":"142","endLine":2,"endColumn":46,"fix":"181"},{"ruleId":"144","severity":2,"message":"182","line":3,"column":8,"nodeType":null,"messageId":"146","endLine":3,"endColumn":17,"fix":"183"},{"ruleId":"140","severity":2,"message":"184","line":4,"column":1,"nodeType":"142","endLine":4,"endColumn":67,"fix":"185"},{"ruleId":"144","severity":2,"message":"150","line":8,"column":63,"nodeType":null,"messageId":"151","endLine":8,"endColumn":64,"fix":"186"},{"ruleId":"187","severity":2,"message":"188","line":10,"column":26,"nodeType":"189","messageId":"190","endLine":10,"endColumn":37},{"ruleId":"144","severity":2,"message":"191","line":11,"column":1,"nodeType":null,"messageId":"146","endLine":11,"endColumn":6,"fix":"192"},{"ruleId":"144","severity":2,"message":"173","line":12,"column":1,"nodeType":null,"messageId":"146","endLine":12,"endColumn":3,"fix":"193"},{"ruleId":"194","severity":2,"message":"195","line":12,"column":15,"nodeType":"196","messageId":"197","endLine":12,"endColumn":26},{"ruleId":"144","severity":2,"message":"198","line":13,"column":1,"nodeType":null,"messageId":"146","endLine":13,"endColumn":25,"fix":"199"},{"ruleId":"194","severity":2,"message":"195","line":13,"column":10,"nodeType":"196","messageId":"197","endLine":13,"endColumn":23},{"ruleId":"144","severity":2,"message":"155","line":15,"column":32,"nodeType":null,"messageId":"156","endLine":15,"endColumn":32,"fix":"200"},{"ruleId":"140","severity":2,"message":"141","line":1,"column":1,"nodeType":"142","endLine":1,"endColumn":78,"fix":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":18},{"ruleId":"187","severity":2,"message":"188","line":4,"column":27,"nodeType":"189","messageId":"190","endLine":4,"endColumn":46},{"ruleId":"144","severity":2,"message":"170","line":5,"column":1,"nodeType":null,"messageId":"146","endLine":5,"endColumn":2,"fix":"206"},{"ruleId":"144","severity":2,"message":"173","line":6,"column":1,"nodeType":null,"messageId":"146","endLine":6,"endColumn":3,"fix":"207"},{"ruleId":"144","severity":2,"message":"208","line":7,"column":1,"nodeType":null,"messageId":"146","endLine":7,"endColumn":4,"fix":"209"},{"ruleId":"144","severity":2,"message":"173","line":8,"column":1,"nodeType":null,"messageId":"146","endLine":8,"endColumn":3,"fix":"210"},{"ruleId":"144","severity":2,"message":"170","line":9,"column":1,"nodeType":null,"messageId":"146","endLine":9,"endColumn":2,"fix":"211"},{"ruleId":"144","severity":2,"message":"212","line":12,"column":33,"nodeType":null,"messageId":"146","endLine":14,"endColumn":1,"fix":"213"},{"ruleId":"202","severity":1,"message":"214","line":12,"column":34,"nodeType":"204","messageId":"205","endLine":12,"endColumn":48},{"ruleId":"202","severity":1,"message":"215","line":12,"column":50,"nodeType":"204","messageId":"205","endLine":12,"endColumn":85},{"ruleId":"216","severity":2,"message":"217","line":12,"column":105,"nodeType":"189","messageId":"197","endLine":14,"endColumn":2},{"ruleId":"144","severity":2,"message":"218","line":4,"column":1,"nodeType":null,"messageId":"146","endLine":4,"endColumn":26,"fix":"219"},{"ruleId":"144","severity":2,"message":"220","line":5,"column":1,"nodeType":null,"messageId":"146","endLine":5,"endColumn":5,"fix":"221"},{"ruleId":"144","severity":2,"message":"222","line":7,"column":1,"nodeType":null,"messageId":"146","endLine":7,"endColumn":56,"fix":"223"},{"ruleId":"194","severity":2,"message":"195","line":7,"column":2,"nodeType":"196","messageId":"197","endLine":7,"endColumn":13},{"ruleId":"144","severity":2,"message":"170","line":8,"column":1,"nodeType":null,"messageId":"146","endLine":8,"endColumn":2,"fix":"224"},{"ruleId":"144","severity":2,"message":"155","line":10,"column":23,"nodeType":null,"messageId":"156","endLine":10,"endColumn":23,"fix":"225"},{"ruleId":"140","severity":2,"message":"141","line":1,"column":1,"nodeType":"142","endLine":1,"endColumn":45,"fix":"226"},{"ruleId":"140","severity":2,"message":"227","line":2,"column":1,"nodeType":"142","endLine":2,"endColumn":39,"fix":"228"},{"ruleId":"144","severity":2,"message":"229","line":6,"column":28,"nodeType":null,"messageId":"146","endLine":6,"endColumn":59,"fix":"230"},{"ruleId":"144","severity":2,"message":"155","line":13,"column":15,"nodeType":null,"messageId":"156","endLine":13,"endColumn":15,"fix":"231"},{"ruleId":"144","severity":2,"message":"150","line":1,"column":46,"nodeType":null,"messageId":"151","endLine":1,"endColumn":47,"fix":"232"},{"ruleId":"233","severity":2,"message":"234","line":4,"column":3,"nodeType":"235","messageId":"236","endLine":4,"endColumn":40},{"ruleId":"144","severity":2,"message":"150","line":4,"column":39,"nodeType":null,"messageId":"151","endLine":4,"endColumn":40,"fix":"237"},{"ruleId":"144","severity":2,"message":"150","line":11,"column":5,"nodeType":null,"messageId":"151","endLine":11,"endColumn":6,"fix":"238"},{"ruleId":"144","severity":2,"message":"239","line":13,"column":23,"nodeType":null,"messageId":"146","endLine":13,"endColumn":24,"fix":"240"},{"ruleId":"144","severity":2,"message":"241","line":1,"column":25,"nodeType":null,"messageId":"146","endLine":1,"endColumn":34,"fix":"242"},{"ruleId":"144","severity":2,"message":"150","line":3,"column":16,"nodeType":null,"messageId":"151","endLine":3,"endColumn":17,"fix":"243"},{"ruleId":"144","severity":2,"message":"244","line":5,"column":66,"nodeType":null,"messageId":"146","endLine":5,"endColumn":69,"fix":"245"},{"ruleId":"144","severity":2,"message":"244","line":6,"column":58,"nodeType":null,"messageId":"146","endLine":6,"endColumn":61,"fix":"246"},{"ruleId":"144","severity":2,"message":"244","line":7,"column":56,"nodeType":null,"messageId":"146","endLine":7,"endColumn":59,"fix":"247"},{"ruleId":"144","severity":2,"message":"248","line":9,"column":22,"nodeType":null,"messageId":"146","endLine":9,"endColumn":24,"fix":"249"},{"ruleId":"194","severity":2,"message":"195","line":10,"column":3,"nodeType":"196","messageId":"197","endLine":10,"endColumn":14},{"ruleId":"144","severity":2,"message":"250","line":10,"column":15,"nodeType":null,"messageId":"146","endLine":10,"endColumn":45,"fix":"251"},{"ruleId":"144","severity":2,"message":"150","line":11,"column":18,"nodeType":null,"messageId":"151","endLine":11,"endColumn":19,"fix":"252"},{"ruleId":"144","severity":2,"message":"248","line":14,"column":18,"nodeType":null,"messageId":"146","endLine":14,"endColumn":20,"fix":"253"},{"ruleId":"194","severity":2,"message":"195","line":15,"column":3,"nodeType":"196","messageId":"197","endLine":15,"endColumn":14},{"ruleId":"144","severity":2,"message":"254","line":15,"column":15,"nodeType":null,"messageId":"146","endLine":15,"endColumn":42,"fix":"255"},{"ruleId":"144","severity":2,"message":"150","line":16,"column":18,"nodeType":null,"messageId":"151","endLine":16,"endColumn":19,"fix":"256"},{"ruleId":"144","severity":2,"message":"248","line":19,"column":17,"nodeType":null,"messageId":"146","endLine":19,"endColumn":19,"fix":"257"},{"ruleId":"194","severity":2,"message":"195","line":20,"column":3,"nodeType":"196","messageId":"197","endLine":20,"endColumn":14},{"ruleId":"144","severity":2,"message":"258","line":20,"column":15,"nodeType":null,"messageId":"146","endLine":20,"endColumn":40,"fix":"259"},{"ruleId":"144","severity":2,"message":"150","line":21,"column":18,"nodeType":null,"messageId":"151","endLine":21,"endColumn":19,"fix":"260"},"import/order","There should be at least one empty line between import groups","ImportDeclaration",{"range":"261","text":"262"},"prettier/prettier","Replace `\"@discordjs/builders\"` with `'@discordjs/builders'`","replace",{"range":"263","text":"264"},"Replace `\"./commands\"⏎` with `'./commands'`",{"range":"265","text":"266"},"Delete `;`","delete",{"range":"267","text":"268"},"Replace `element` with `(element)`",{"range":"269","text":"270"},"Insert `⏎`","insert",{"range":"271","text":"262"},{"range":"272","text":"262"},{"range":"273","text":"262"},"Replace `\"discord.js\";` with `'discord.js'`",{"range":"274","text":"275"},"Replace `(·` with `·(`",{"range":"276","text":"277"},"Insert `,`",{"range":"278","text":"279"},{"range":"280","text":"279"},{"range":"281","text":"262"},"Replace `↹command:·string,` with `··command:·string`",{"range":"282","text":"283"},"Replace `↹` with `··`",{"range":"284","text":"285"},{"range":"286","text":"285"},"Replace `↹↹` with `····`",{"range":"287","text":"288"},{"range":"289","text":"288"},{"range":"290","text":"285"},{"range":"291","text":"285"},{"range":"292","text":"288"},{"range":"293","text":"288"},{"range":"294","text":"285"},{"range":"295","text":"262"},"Replace `·builder·` with `builder`",{"range":"296","text":"297"},"`../utils/secrets` import should occur before import of `./Builder`",{"range":"298","text":"299"},{"range":"300","text":"268"},"@typescript-eslint/explicit-function-return-type","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Replace `↹rest` with `··rest⏎····`",{"range":"301","text":"302"},{"range":"303","text":"288"},"no-console","Unexpected console statement.","MemberExpression","unexpected","Replace `↹↹.catch(console.error);` with `····.catch(console.error)`",{"range":"304","text":"305"},{"range":"306","text":"262"},{"range":"307","text":"262"},"@typescript-eslint/no-unused-vars","'commands' is defined but never used.","Identifier","unusedVar",{"range":"308","text":"285"},{"range":"309","text":"288"},"Replace `↹↹↹` with `······`",{"range":"310","text":"311"},{"range":"312","text":"288"},{"range":"313","text":"285"},"Replace `(client:·Client,·interaction:·BaseCommandInteraction):·Promise<void>·=>·{⏎⏎` with `·(client:·Client,·interaction:·BaseCommandInteraction):·Promise<void>·=>·{`",{"range":"314","text":"315"},"'client' is defined but never used.","'interaction' is defined but never used.","@typescript-eslint/no-empty-function","Unexpected empty async arrow function.","Replace `↹client.on(\"ready\",·async` with `··client.on('ready',·async·`",{"range":"316","text":"317"},"Replace `↹↹if` with `····if·`",{"range":"318","text":"319"},"Replace `↹console.log(`Ready!·Logged·in·as·${client.user.tag}`);` with `····console.log(`Ready!·Logged·in·as·${client.user.tag}`)`",{"range":"320","text":"321"},{"range":"322","text":"285"},{"range":"323","text":"262"},{"range":"324","text":"262"},"`./events/onReady` import should occur after import of `./events/interactionCreate`",{"range":"325","text":"326"},"Replace `intents:·[Intents.FLAGS.GUILDS]` with `·intents:·[Intents.FLAGS.GUILDS]·`",{"range":"327","text":"328"},{"range":"329","text":"262"},{"range":"330","text":"268"},"no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"331","text":"268"},{"range":"332","text":"268"},"Replace `;` with `⏎`",{"range":"333","text":"262"},"Replace `\"dotenv\";` with `'dotenv'`",{"range":"334","text":"335"},{"range":"336","text":"268"},"Replace `\"\";` with `''`",{"range":"337","text":"338"},{"range":"339","text":"338"},{"range":"340","text":"338"},"Replace `\"\"` with `''`",{"range":"341","text":"338"},"Replace `\"Missing·env:·DISCORD_TOKEN\");` with `'Missing·env:·DISCORD_TOKEN')`",{"range":"342","text":"343"},{"range":"344","text":"268"},{"range":"345","text":"338"},"Replace `\"Missing·env:·ClLIENT_ID\");` with `'Missing·env:·ClLIENT_ID')`",{"range":"346","text":"347"},{"range":"348","text":"268"},{"range":"349","text":"338"},"Replace `\"Missing·env:·GUILD_ID\");` with `'Missing·env:·GUILD_ID')`",{"range":"350","text":"351"},{"range":"352","text":"268"},[57,57],"\n",[36,57],"'@discordjs/builders'",[83,96],"'./commands'",[132,133],"",[152,159],"(element)",[294,294],[231,231],[60,60],[47,60],"'discord.js'",[214,216]," (",[371,371],",",[382,382],[384,384],[20,37],"  command: string",[38,39],"  ",[99,100],[102,104],"    ",[121,123],[158,159],[162,163],[165,167],[182,184],[238,239],[84,84],[92,101],"builder",[85,186],"import { discordToken, clientId, guildId } from '../utils/secrets'\nimport  builder  from './Builder'\n",[307,308],[349,354],"  rest\n    ",[430,432],[506,530],"    .catch(console.error)",[564,564],[77,77],[175,176],[245,247],[309,312],"      ",[358,360],[362,363],[401,476]," (client: Client, interaction: BaseCommandInteraction): Promise<void> => {",[86,111],"  client.on('ready', async ",[119,123],"    if ",[169,224],"    console.log(`Ready! Logged in as ${client.user.tag}`)",[225,226],[253,253],[44,44],[45,185],"import registerCommands from './commands'\nimport interactionCreate from './events/interactionCreate'\nimport onReady from './events/onReady'\n",[213,244]," intents: [Intents.FLAGS.GUILDS] ",[325,325],[45,46],[103,104],[194,195],[219,220],[24,33],"'dotenv'",[50,51],[118,121],"''",[179,182],[238,241],[264,266],[284,314],"'Missing env: DISCORD_TOKEN')",[332,333],[354,356],[374,401],"'Missing env: ClLIENT_ID')",[419,420],[440,442],[460,485],"'Missing env: GUILD_ID')",[503,504]]